---
title: "Project 1 -- Problem Set 2: Creating and Visualizing Forecasts"
format: 
  html:
    theme: zephyr
---

## Before you begin

Review the [Project 01 instructions](https://csu-arec-330.github.io/materials/unit_01/project/project_1_instructions.html). 

Treat this assignment as another step of your project. 

**You may work on this assignment with your partner. However, each person will submit the assignment individually. If one person builds the visualizations in Tableau, use their embed code on your Google site.**

## Part 1: R

1. Complete a **time series decomposition** for *each* of the three time series datasets that you collected for your project following the steps from [Lab 06](lab_01_week_02.qmd):

  - Load your data into R.
  - Convert to a time series object.
  - Perform the time series decomposition.
  - Generate a "[seasonally-adjusted](https://otexts.com/fpp3/components.html#seasonally-adjusted-data)" time series of your observed data. Call this object `sa_price` (if you are working with price data; if you are working with other data, please add the prefix `sa_` to the appropriate name).
  - Add a new variable called `forecast` that takes a value of `FALSE` to indicate that the data are observed values.
  - Add a new variable called `measure_date` following the steps in the lab notes.
  - Store the decomposed data as a data frame. **Note:** One for each time series decomposition.

2. Use R to create a **3-year forecast** for *each* chosen time series. Follow the steps we went through in lab.  

  - Keep only forecasted data that occurs after the last observed date. 
  - Create a new variable that indicates the new data you have created is a forecast (`forecast = TRUE`).

3. Create a dataframe for *each* time series using `bind_rows`, then write them to a csv file. You will end up with three csv files with the following variables: `measure_date`, `price`, `sa_price`, `trend`, `seasonal`, `random`, `forecast`, `upper`, `lower`. 


## Part 2: Tableau

1. Open Tableau and connect to the csv you exported from R. This file should include:
  - Your original price time series data for *each time series*
  - The forecasted values
  - The three components of your decomposition (trend, seasonality, and residuals)

**Note:** If necessary, filter the `measure_date` field so that all worksheets in your workbook begin at the relevant start date for your analysis. 

2. For each time series:

  - Plot the raw price data as a line chart. 
  - Make sure forecasted values (`forecast = TRUE`) are **filtered out** when generating the line graph. 
  - Add the trend, seasonal, and random components as new panes below the price line. 
  - Add a caption answering the following questions:
    - What are the **overall trends** in the data?  
    - Which seasons have **higher or lower prices**?  
    - How much variation remains **unexplained** after removing trend and seasonality?  

3. Format your visualizations by adding color, useful titles, appropriate marker labels, text annotations, etc. that help your audience understand your analysis.

4. Publish each time series decomposition worksheet on Tableau public.


## How to Submit

1. **Create a new webpage on your Google site** titled `Problem Set 6`.
2. **Include the following:**
   - **Part 1**: An R script displaying the code used for data acquisition, time series decomposition, and forecasting.
   - **Part 2**: Your Tableau worksheets.
3. **Publish the page and submit the link** to your Google site webpage in Canvas.


## Reminder: How to Use "Compile Report" Option in R

*Given the truncation issues with generating log files with the "sink-source-sink" process, here is an alternative solution. Please use this method going forward.*

{{< video https://youtu.be/B2AchbhnFTo aspect-ratio="16x9" >}}

- Under the File menu, select **Compile Report...**
- The default under "Report output format" is HTML. 
- Select **Compile**
- Along the tool bar, select **Open in Browser**
- Hover your cursor over white space and **right click**.
- Select **View page source**.
- A new screen will appear with HTML code. (Don't worry, this might look like gibberish, but it's not!)
- Using your keyboard, click **`CTRL`+`A`**. This will highlight all of the HTML code.
- While the HTML code is highlighted, **right click** and select **Copy**.
- Go to your Google website. 
- Similar to as you would embed your Tableau visualization, select **Embed** under Insert.
- Then, select **Embed code**.
- Paste your embed code from your clipboard by either right-clicking and selecting **Paste** or `CTRL`+`V`.
- Select **Next**.
- **Resize** the image of your R script by expanding the window to fit the entire script.  

Following these steps will display your entire code and output without truncation. 